import edu.wpi.first.gradlerio.GradleRIOPlugin

plugins {
  id "java"
  id "edu.wpi.first.GradleRIO" version "2019.4.1"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def ROBOT_MAIN_CLASS = "frc.robot.Main"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
  targets {
    roboRIO("roborio") {
      team = 3681
    }
  }
  artifacts {
    frcJavaArtifact('frcJava') {
      targets << "roborio"
    }
    // Built in artifact to deploy arbitrary files to the roboRIO.
    fileTreeArtifact('frcStaticFileDeploy') {
      // The directory below is the local directory to deploy
      files = fileTree(dir: 'src/main/deploy')
      // Deploy to RoboRIO target, into /home/lvuser/deploy
      targets << "roborio"
      directory = '/home/lvuser/deploy'
    }
  }
}

// Set this to true to enable desktop support.
def includeDesktopSupport = false

// Maven central needed for JUnit
repositories {
  mavenCentral()
}

// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
// Also defines JUnit 4.
dependencies {
  compile wpi.deps.wpilib()
  compile wpi.deps.vendor.java()
  nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
  nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)
  testCompile 'junit:junit:4.12'
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  manifest GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)
}
